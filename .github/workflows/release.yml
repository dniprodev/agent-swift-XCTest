# Copyright 2024 EPAM Systems
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Release

on:
  push:
    branches:
      - main
    paths-ignore:
      - '.github/**'
      - README.md
      # - CHANGELOG.md

env:
  PODSPEC_FILE: ReportPortalAgent.podspec
  CHANGE_LOG_FILE: CHANGELOG.md
  CHANGE_LOG_TMP_FILE: CHANGELOG_updated.md
  RELEASE_BRANCH: main
  DEVELOP_BRANCH: develop

jobs:
  publish-pod:
    name: Publish pod
    runs-on: macOS-latest
  
    steps:
      - name: Checkout repository
      - uses: actions/checkout@v4
  
      - name: Setup git credentials
        uses: oleksiyrudenko/gha-git-credentials@v2.1.1
        with:
          name: 'reportportal.io'
          email: 'support@reportportal.io'
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate versions
        run: |
          VERSION=$(grep 's.version' ${PODSPEC_FILE} | head -1 | sed "s/.*'\(.*\)'.*/\1/")
          echo "::set-output name=version::${VERSION}"
  
      - name: Update CHANGELOG.md
        run: |
          sed '/\[Unreleased\]/q' ${{ env.CHANGE_LOG_FILE }} >> ${{ env.CHANGE_LOG_TMP_FILE }}
          sed -E '1,/#?#\s*\[Unreleased\]/d' ${{ env.CHANGE_LOG_FILE }} | sed -E '/#?#\s*\[/q' | \
          { echo -e '\n## [${{env.RELEASE_VERSION}}]'; sed '$d'; } >> ${{ env.CHANGE_LOG_TMP_FILE }}
          grep -E '#?#\s*\[[0-9]' ${{ env.CHANGE_LOG_FILE }} | head -n1 >> ${{ env.CHANGE_LOG_TMP_FILE }}
          sed -E '1,/#?#\s*\[[0-9]/d' ${{ env.CHANGE_LOG_FILE }} >> ${{ env.CHANGE_LOG_TMP_FILE }}
          rm ${{ env.CHANGE_LOG_FILE }}
          mv ${{ env.CHANGE_LOG_TMP_FILE }} ${{ env.CHANGE_LOG_FILE }}
          git add ${{ env.CHANGE_LOG_FILE }}
          git commit -m "Changelog update"
          git push

      - name: Read changelog Entry
        id: readChangelogEntry
        uses: mindsers/changelog-reader-action@v2
        with:
          version: ${{ steps.get_version.outputs.version }}
          path: ./${{ env.CHANGE_LOG_FILE }}

      - name: Create Release
        id: createRelease
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.get_version.outputs.version }}
          name: Release ${{ steps.get_version.outputs.version }}
          body: ${{ steps.readChangelogEntry.outputs.changes }}
          
      - name: Setup
        uses: ./.github/actions/setup-build-env
  
      - name: Publish to CocoaPod trunk
        run: pod trunk push ${{ env.PODSPEC_FILE }}
        env:
          COCOAPODS_TRUNK_TOKEN: ${{ secrets.COCOAPODS_TRUNK_TOKEN }}

      - name: Checkout develop branch
        if: ${{ github.ref }} == ${{ env.RELEASE_BRANCH }}
        uses: actions/checkout@v4
        with:
          ref: ${{ env.DEVELOP_BRANCH }}
          fetch-depth: 0

      - name: Merge release branch into develop
        id: mergeIntoDevelop
        if: ${{ github.ref }} == ${{ env.RELEASE_BRANCH }}
        run: |
          git merge -m 'Merge release branch into develop after a release' origin/${{ env.RELEASE_BRANCH }}
          git status | (! grep -Fq 'both modified:') || git status | grep -F 'both modified:' \
          | { echo -e 'Unable to merge release into develop, merge conflicts:'; (! grep -Eo '[^ ]+$') }
          git push origin ${{ env.DEVELOP_BRANCH }}
